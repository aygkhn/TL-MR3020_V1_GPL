
<script language="JavaScript" src="../dynaform/custom.js" type="text/JavaScript"></script>
<SCRIPT language=javascript src="../localiztion/char_set.js" type=text/javascript>
</SCRIPT>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<SCRIPT type="text/javascript">
<!-- 
function doHelp()
{
	location.href="/help/WlanNetworkHelpRpm_APC.htm";
}
function getValLen(val)
{
	var len = 0;
	var i = 0;
	for (i = 0; i < val.length; i ++)
	{
		var c = val.charAt(i);
		len += ((c >= ' ') && (c <= '~')) ? 1 : 2;
	}
	return len;
}
// check len of ssid
function checkssid()
{
	var cf = document.forms[0];
	return getValLen(cf.ssid1.value);
}

function checkbrlssid()
{
	var cf = document.forms[0];
	return getValLen(cf.brlssid.value);
}

var transMatrixURL = new Array(
	/%/g, "%25",
	/#/g, "%23",
	/&/g, "%26",
	/;/g, "%3B",
	/\\/g, "%5C",
	/'/g, "%27",
	/"/g, "%22",
	/</g, "%3C",
	/>/g, "%3E",
	/ /g, "%20",
	/\+/g, "%2B",
	/\=/g, "%3D"
);
function transToURL(str)
{
	for (var i = 0; i < transMatrixURL.length; i+=2)
	{
		str = str.replace(transMatrixURL[i], transMatrixURL[i+1]);
	}
	return str;
}

function checkname(szname)
{
	var c;
	var ch = "0123456789ABCDEFabcdefGHIJKLMNOPQRSTUVWXYZghijklmnopqrstuvwxyz`~!@#$%^&*()-=_+[]{};:\'\"\\|/?.,<>/ ";

	for (var i = 0; i < szname.length; i++)
	{
		c = szname.charAt(i);
		if (ch.indexOf(c) == -1)
			return false;
	}
	return true;
}

function checkwephexkey(szkey)
{
	var c;
	var ch = "0123456789ABCDEFabcdef";

	for (var i = 0; i < szkey.length; i++)
	{
		c = szkey.charAt(i);
		if (ch.indexOf(c) == -1)
			return false;
	}
	return true;
}

function isBroadcast(macAddr)
{
	for (var i=0; i < macAddr.length; i++)
	{
		if ((i + 1) % 3 == 0)
			continue;
		if ((macAddr.charAt(i) != 'f')&& (macAddr.charAt(i) != 'F'))
			return false;
	}
	return true;
}

function isMulticast(macAddr)
{
	return ((macAddr.charAt(0) == '0') && (macAddr.charAt(1) == '1'));
}

function isAllzero(macAddr)
{
	for (var i=0; i < macAddr.length; i++)
	{
		if ((i + 1) % 3 == 0)
			continue;
		if (macAddr.charAt(i) != '0')
			return false;
	}
	return true;
}

//added by zhanglipeng 2010-01-06, For WR743ND AP Client Router
function doWkMode()
{
	var cf = document.forms[0];
	if(wlanPara[37] == 5)
	{
		cf.wdsbrl.checked = true;	
	}
	else
	{
		//document.getElementById("display_wds").style.display = "";
	}
}

function doDisWlan()
{
	var cf = document.forms[0];
	if(cf.diswlan.checked)
	{
		cf.ssid1.disabled = true;
		cf.broadcast.disabled = true;
	}
	else
	{
		cf.ssid1.disabled = false;
		cf.broadcast.disabled = false;
	}
}
//end add 2010-01-06

//added by songwei
function doBrl()
{
	var cf = document.forms[0];

	if (cf.keytype.value == 1)
	{
		cf.wepindex.disabled = true;
		cf.authtype.disabled = true;
		cf.keytext.disabled = true;
	}
	if ((cf.keytype.value == 2) || (cf.keytype.value == 3))
	{
		cf.wepindex.disabled = false;
		cf.keytext.disabled = false;
		cf.authtype.disabled = false;
		cf.keytext.maxLength = (cf.keytype.value == 2)? 16:32;
	}
	else if(cf.keytype.value == 4)
	{	
		cf.keytext.disabled = false;
		cf.wepindex.disabled = true;
		cf.authtype.disabled = true;
		cf.keytext.maxLength = 64;
	}
	return true;
}

function doSelKeytype()
{
	var cf = document.forms[0];
	if ((cf.keytype.value == 2) || (cf.keytype.value == 3))
	{
		cf.wepindex.disabled = false;
		cf.authtype.disabled = false;
		cf.keytext.disabled = false;
		cf.keytext.maxLength = (cf.keytype.value == 2)? 16:32;
	}
	else if(cf.keytype.value == 4)
	{
		cf.keytext.disabled = false;
		cf.wepindex.disabled = true;
		cf.authtype.disabled = true;
		cf.keytext.maxLength = 64;
	     }
	else
    	    {
		cf.keytext.disabled = true;
        	cf.wepindex.disabled = true;
		cf.authtype.disabled = true;
    }
	return true;
}

function doSurvey()
{
	var ss = document.forms[0].ssid1.value;
	//if(document.forms[0].wdsbrl.checked)
	location.href="popupSiteSurveyRpm.htm?select=" + document.forms[0].wdsbrl.checked
								+ "&wrr=" + document.forms[0].ap.checked
								+ "&sb=" + document.forms[0].broadcast.checked
								+ "&ssid=" + transToURL(ss.toString())
								+ "&session_id=" + session_id;
}

function checkWEP()
{
	var cf = document.forms[0];
	var APLen = getValLen(wlanPara[46]);
	var STALen = getValLen(cf.keytext.value);
	if (APLen != STALen)
		return false;
	
	for (i=0; i<APLen; i++)
	{
		if (wlanPara[46].charAt(i) != cf.keytext.value.charAt(i))
			return false;
	} 
	return true;
}

function doSubmit()
{
	var cf = document.forms[0];
	var ressid;
	var brlressid;

	ressid = checkssid();
	if(0 == ressid)
	{
		alert(js_pl_ssid="Please input Local SSID!");
		doSelKeytype();
		return false;
	}
	if(ressid > 32)
	{
		alert(js_ssid_exceed_32_1 = "Local SSID cannot exceed 32 characters. Please input correctly!");
		doSelKeytype();
		return false;
	}
	if (cf.wdsbrl.checked)
	{
		brlressid = checkbrlssid();
		if (brlressid > 32)
		{
			alert(js_ssid_exceed_32_2 = "WISP's SSID cannot exceed 32 characters. Please input correctly!");
			doSelKeytype();
			return false;
		}
		if (0 == brlressid)
		{
			alert(js_pl_bridge_ssid="Please input WISP's SSID!");
			doSelKeytype();			
			return false;
		}
		if (cf.brlssid.value == cf.ssid.value)
		{
			alert(js_pl_bridge_ssid="Local SSID can not equal to WISP's SSID! Please change it!");
			doSelKeytype();			
			return false;
		}
		var bssid = cf.brlbssid.value;
		if (bssidverify(bssid) == false)
		{
			doSelKeytype();
			return false;
		}

        if (isBroadcast(bssid) == true)
		{
			alert(js_bridge_broadcast="WISP's BSSID is broadcast address, please input again!");
			doSelKeytype();
			return false;
		}
		
		if (isAllzero(bssid) == true)
		{
			alert(js_bridge_ssid_invalid="WISP's BSSID is invalid, please input again!");
			doSelKeytype();
			return false;
		}
		
		if (isMulticast(bssid) == true)
		{
			alert(js_bridge_multicast="WISP's BSSID is multicast address, please input again!");
			doSelKeytype();
			return false;
		}

		if ((cf.keytype.value == 2)&&((getValLen(cf.keytext.value)!=5) && (getValLen(cf.keytext.value)!=13) && (getValLen(cf.keytext.value)!=16)))
		{
			alert(js_key_corret1="The ASCII key'length must be 5,13 or 16!");
			doSelKeytype();			
			return false;
		}
		else if ((cf.keytype.value == 3)&&((getValLen(cf.keytext.value)!=10) && (getValLen(cf.keytext.value)!=26) && (getValLen(cf.keytext.value)!=32)))
		{
			alert(js_key_corret2="The HEX key'length must be 10,26 or 32!");
			doSelKeytype();
			return false;
		}
		
		if (cf.keytype.value == 3)
		{ 
			if (checkwephexkey(cf.keytext.value) == false)
			{
				alert(js_key_corret3="The hex wep key includes illegal characters!");
				doSelKeytype();
				return false;
			}
		}
		if (cf.keytype.value == 4)
		{
			if ((getValLen(cf.keytext.value) == 64) && (checkwephexkey(cf.keytext.value) == false))
			{
				alert(js_pskkey_corret="The Hex PSK key includes illegal characters!");
				doSelKeytype();
				return false;
			}
		}
		if (!checkname(cf.brlssid.value))
		{
			alert(js_ssid_ill="WISP's SSID contains illegal characters, please input another one!");
			doSelKeytype();		
			return false;
		}
	}
		
	if (!checkname(cf.ssid.value))
	{
		alert(js_ssid_ill="Local SSID contains illegal characters, please input another one!");
		doSelKeytype();		
		return false;
	}
	
	for (var i =0; i<document.forms[0].elements.length; i++)
	{
		cf.elements[i].disabled = false;
	}
	//end add
	if (cf.wdsbrl.checked == false)
	{
		cf.brlssid.value = "";
		cf.brlbssid.value = "";
		cf.keytype.value = 1;
		cf.keytext.value = "";
	}
	if ((cf.wdsbrl.checked==true) && (wlanPara[28]==1) && (wlanPara[29] == 1))
	{ 
		if (cf.keytype.value == 4)
		{
			doSelKeytype();
			alert(js_security_not_set="Your AP's security is WEP, so you can't use the wpa_psk as WDS's security.");
			return false;
		}

		if(wlanPara[33] != cf.wepindex.value && (cf.keytype.value == 2 || cf.keytype.value == 3))
		{
			if (!confirm(js_wep_same_idx="Your AP's WEP index doesn't accord with WDS link. Do you want to use the same WEP index for the local wireless network as the WDS link?"))
			{
				return false;
			}
		}

		if (((cf.keytype.value == 2) && (wlanPara[45] == 2))
			|| ((cf.keytype.value == 3) && (wlanPara[45] == 1)))
		{
			if (checkWEP() == false)
			{
				doSelKeytype();
				if (!confirm(js_wep_notsame1="If both your AP and WDS use WEP with the same index as security mode, then you should make sure the keys are the same, do you want to use the same security settings for the local wireless network as the WDS link?"))
				{
					return false;
				}
			}
		}
		if (((cf.keytype.value == 2) && (wlanPara[45] == 1))
			|| ((cf.keytype.value == 3) && (wlanPara[45] == 2)))
		{
			doSelKeytype();
			if (!confirm(js_wep_notsame2="If both your AP and WDS use WEP with the same index as security mode, then you should make sure the keys are the same, do you want to use the same security settings for the local wireless network as the WDS link?"))
			{
				return false;
			}
		}
	}
	//end add
	
	
	if (cf.keytype.value == 4)
	{
		if (doCheckPskPasswd(cf.keytext.value) == false)
		{
			doSelKeytype();
			return false;
		}
	}
	
	return true;
}
var strMode = new Array(
"id=\"t_11b_only\">11b only<",
"id=\"t_11g_only\">11g only<",
"id=\"t_11n_only\">11n only<",
"id=\"t_11bg_mix\">11bg mixed<",
"id=\"t_11gn_only\">11bgn mixed<"
);
function changeMode()
{
	var cf = document.forms[0];
	var maxMode = 1;
	var optionObj;
	var regionNum;
	var oldMode = cf.mode.value;
	var channelIndex;
	var modeCount = 5;
	var ix = 0;
	if (wlanPara[6] == 1)
		channelIndex = document.forms[0].region.value;
	else
		channelIndex = 17;
	channelIndex = (channelIndex)*4;
	cf.mode.options.length = 0;
	for(i = 0;i < modeCount;i++)
	{
		cf.mode.options[i] = new Option(strMode[i],i+1,false,false);
	}
	maxMode = modeCount;

	if (oldMode > maxMode)
		oldMode =1;
	cf.mode.value = oldMode;

	if((cf.mode.selectedIndex == 0) || (cf.mode.selectedIndex == 1) || (cf.mode.selectedIndex == 3))
	{
		cf.chanWidth.value = 1;
		cf.chanWidth.disabled = true;
	}
	else
	{
		cf.chanWidth.value = wlanPara[11];
		cf.chanWidth.disabled = false;
	}
	checkRegion();
}
function changeRegion()
{
	changeMode();
	var cf = document.forms[0];
	var oldChannel = cf.channel.value;

	cf.channel.options.length = 1;
	var channelIndex;
	if (wlanPara[6] == 1)
		channelIndex = document.forms[0].region.value;
	else
		channelIndex = 17;
	channelIndex = (channelIndex)*4;
	var j=1;
	var oldRegion = regionInfo[channelIndex];
	while(oldRegion == regionInfo[channelIndex])
	{	
		for (var i=regionInfo[channelIndex+1]; i<=regionInfo[channelIndex+2]; i++)
		{
			if (14 == i)
			{
				if (!document.forms[0].mode.value)
				{
					if ((2 == wlanPara[7]) || (3 == wlanPara[7]))
				continue;
				}
				
				if ((2 == document.forms[0].mode.value)
					|| (3 == document.forms[0].mode.value))
				continue;
			}

			var optionObj = new Option(i,i,false,false);
			cf.channel.options[j++]=optionObj;
			if (i == oldChannel)
				cf.channel.value =i;
		}
		channelIndex =channelIndex+4;
	}
}

//add by songwei,NorthKorea and Morocoo don't support 40MHz
function checkRegion()
{
	var cf = document.forms[0];
	if ((cf.region.value == 54) || (cf.region.value == 69))
	{	
			cf.chanWidth.value = 1;
			cf.chanWidth.disabled = true;
		}
//end add
}
var regionInfo = new Array(
	"id=\"t_alb\">Albania<", 1, 13, 2,
	"id=\"t_alg\">Algeria<", 1, 13, 2,
	"id=\"t_arg\">Argentina<", 1, 13, 2,
	"id=\"t_arm\">Armenia<", 1, 13, 2,
	"id=\"t_ausl\">Australia<", 1, 13, 2,
	"id=\"t_ausa\">Austria<", 1, 13, 2,
	"id=\"t_aze\">Azerbaijan<", 1, 13, 2,
	"id=\"t_bah\">Bahrain<", 1, 13, 2,
	"id=\"t_bela\">Belarus<", 1, 13, 2,
	"id=\"t_belg\">Belgium<", 1, 13, 2,
	"id=\"t_beli\">Belize<", 1, 13, 2,
	"id=\"t_bol\">Bolivia<", 1, 13, 2,
	"id=\"t_bra\">Brazil<", 1, 13, 2,
	"id=\"t_bru\">Brunei Darussalam<", 1, 13, 2,
	"id=\"t_bul\">Bulgaria<", 1, 13, 2,
	"id=\"t_can\">Canada<", 1, 11, 2,
	"id=\"t_chi\">Chile<", 1, 13, 2,
	"id=\"t_cn\">China<", 1, 13, 1,
	"id=\"t_col\">Colombia<", 1, 11, 2,
	"id=\"t_cos\">Costa Rica<", 1, 13, 2,
	"id=\"t_cro\">Croatia<", 1, 13, 2,
	"id=\"t_cyp\">Cyprus<", 1, 13, 2,
	"id=\"t_cze\">Czech Republic<", 1, 13, 2,
	"id=\"t_den\">Denmark<", 1, 13, 2,
	"id=\"t_dom\">Dominican Republic<", 1, 11, 2,
	"id=\"t_ecu\">Ecuador<", 1, 13, 2,
	"id=\"t_egy\">Egypt<", 1, 13, 2,
	"id=\"t_sal\">El Salvador<", 1, 13, 2,
	"id=\"t_est\">Estonia<", 1, 13, 2,
	"id=\"t_fin\">Finland<", 1, 13, 2,
	"id=\"t_fra\">France<", 1, 13, 2,
	"id=\"t_gro\">Georgia<", 1, 13, 2,
	"id=\"t_ger\">Germany<", 1, 13, 2,
	"id=\"t_gre\">Greece<", 1, 13, 2,
	"id=\"t_gua\">Guatemala<", 1, 11, 2,
	"id=\"t_hon\">Honduras<", 1, 13, 2,
	"id=\"t_hnk\">Hong Kong<", 1, 13, 2,
	"id=\"t_hun\">Hungary<", 1, 13, 2,
	"id=\"t_ice\">Iceland<", 1, 13, 2,
	"id=\"t_inda\">India<", 1, 13, 2,
	"id=\"t_indn\">Indonesia<", 1, 13, 2,
	"id=\"t_iran\">Iran<", 1, 13, 2,
	"id=\"t_ire\">Ireland<", 1, 13, 2,
	"id=\"t_isr\">Israel<", 1, 13, 2,
	"id=\"t_itly\">Italy<", 1, 13, 2,
	"id=\"t_jpn\">Japan<", 1, 14, 2,
	"id=\"t_jpn1\">Japan1<", 1, 14, 2,
	"id=\"t_jpn2\">Japan2<", 1, 11, 2,
	"id=\"t_jpn3\">Japan3<", 1, 14, 2,
	"id=\"t_jpn4\">Japan4<", 1, 14, 2,
	"id=\"t_jpn5\">Japan5<", 1, 14, 2,
	"id=\"t_jpn6\">Japan6<", 1, 13, 2,
	"id=\"t_jor\">Jordan<", 1, 13, 2,
	"id=\"t_kaz\">Kazakhstan<", 1, 13, 2,
	"id=\"t_nko\">North Korea<", 1, 13, 2,
	"id=\"t_rko\">Korea Republic<", 1, 13, 2,
	"id=\"t_rko3\">Korea Republic3<", 1, 13, 2,
	"id=\"t_kuw\">Kuwait<", 1, 13, 2,
	"id=\"t_lat\">Latvia<", 1, 13, 2,
	"id=\"t_leb\">Lebanon<", 1, 13, 2,
	"id=\"t_lie\">Liechtenstein<", 1, 13, 2,
	"id=\"t_lit\">Lithuania<", 1, 13, 2,
	"id=\"t_lux\">Luxembourg<", 1, 13, 2,
	"id=\"t_macau\">Macau<", 1, 13, 2,
	"id=\"t_mace\">Macedonia<", 1, 13, 2,
	"id=\"t_mala\">Malaysia<", 1, 13, 2,
	"id=\"t_malt\">Malta<", 1, 13, 2,
	"id=\"t_maxi\">Mexico<", 1, 11, 2,
	"id=\"t_mon\">Monaco<", 1, 13, 2,
	"id=\"t_mor\">Morocco<", 1, 13, 2,
	"id=\"t_net\">Netherlands<", 1, 13, 2,
	"id=\"t_nzl\">New Zealand<", 1, 13, 2,
	"id=\"t_nor\">Norway<", 1, 13, 2,
	"id=\"t_oman\">Oman<", 1, 13, 2,
	"id=\"t_pak\">Pakistan<", 1, 13, 2,
	"id=\"t_pan\">Panama<", 1, 11, 2,
	"id=\"t_peru\">Peru<", 1, 13, 2,
	"id=\"t_phi\">Philippines<", 1, 13, 2,
	"id=\"t_pol\">Poland<", 1, 13, 2,
	"id=\"t_port\">Portugal<", 1, 13, 2,
	"id=\"t_pue\">Puerto Rico<", 1, 11, 2,
	"id=\"t_qat\">Qatar<", 1, 13, 2,
	"id=\"t_rome\">Romania<", 1, 13, 2,
	"id=\"t_rus\">Russia<", 1, 13, 2,
	"id=\"t_sau\">Saudi Arabia<", 1, 13, 2,
	"id=\"t_siga\">Singapore<", 1, 13, 2,
	"id=\"t_svk\">Slovak Republic<", 1, 13, 2,
	"id=\"t_slo\">Slovenia<", 1, 13, 2,
	"id=\"t_saf\">South Africa<", 1, 13, 2,
	"id=\"t_spn\">Spain<", 1, 13, 2,
	"id=\"t_swe\">Sweden<", 1, 13, 2,
	"id=\"t_swi\">Switzerland<", 1, 13, 2,
	"id=\"t_syr\">Syria<", 1, 13, 2,
	"id=\"t_tw\">Taiwan<", 1, 11, 2,
	"id=\"t_thai\">Thailand<", 1, 13, 2,
	"id=\"t_tri\">Trinidad & Tobago<", 1, 13, 2,
	"id=\"t_tun\">Tunisia<", 1, 13, 2,
	"id=\"t_tur\">Turkey<", 1, 13, 2,
	"id=\"t_ukr\">Ukraine<", 1, 13, 2,
	"id=\"t_uae\">United Arab Emirates<", 1, 13, 2,
	"id=\"t_uk\">United Kingdom<", 1, 13, 2,
	"id=\"t_us\">United States<", 1, 11, 2,
	"id=\"t_uru\">Uruguay<", 1, 13, 2,
	"id=\"t_uzb\">Uzbekistan<", 1, 11, 2,
	"id=\"t_ven\">Venezuela<", 1, 13, 2,
	"id=\"t_viet\">Viet Nam<", 1, 13, 2,
	"id=\"t_yem\">Yemen<", 1, 13, 2,
	"id=\"t_zim\">Zimbabwe<", 1, 13, 2
); 

//-->
</SCRIPT>
</HEAD>
<BODY  onload="setTagStr(document,'ntw_wlan_apc_network');doBrl();LoadHelp('WlanNetworkHelpRpm_APC.htm');resize(this);" >
<CENTER>
  <FORM onSubmit="return doSubmit();" action="WlanNetworkRpm.htm" method="get" enctype="multipart/form-data">
    <TABLE id="autoWidth" border = 0>
      <TBODY>
        <TR>
          <TD class="h1" colspan=2 id="t_title">Wireless Settings</TD>
        </TR>
		<TR>
          <TD class="blue" colspan=2></TD>
        </TR>
		<TR>
          <TD class="h2" colspan=3 id="t_title">Client Setting</TD>
        </TR>

        <TR>
          <TD class="Item" id="t_brlssid">SSID:</TD>
          <TD><INPUT class="text" id="brlssid" name="brlssid" maxlength=32 size=32></TD>
        </TR>
        <TR>
          <TD class="Item" id="t_brlssid">BSSID:</TD>
          <TD><INPUT class="text" id="brlbssid" name="brlbssid" maxlength=17 size=17><span id="t_example" name="t_example">
            &nbsp;Example:00-1D-0F-11-22-33</span></TD>
        </TR>
        <TR>
          <TD></TD>
          <TD align="left"><INPUT name="survey" id="survey" type="button" class="button" value="Survey" onClick="doSurvey();"></TD>
        </TR>
        <TR>
          <TD class="Item" id="t_keytype">Key type:</TD>
          <TD><SELECT name="keytype" style = "width:180px" onChange="doSelKeytype()">
              <OPTION value=1 id="t_none">None</OPTION>
              <OPTION value=2 id="t_wep_asc">WEP(ASCII)</OPTION>
              <OPTION value=3 id="t_wep_hex">WEP(HEX)</OPTION>
              <OPTION value=4  id="t_wpa">WPA-PSK/WPA2-PSK</OPTION>
            </SELECT></TD>
        </TR>
        <TR>
          <TD class="Item" id="t_wepindex">WEP Index:</TD>
          <TD><SELECT name="wepindex" style = "width:180px">
              <OPTION value=1>1</OPTION>
              <OPTION value=2>2</OPTION>
              <OPTION value=3>3</OPTION>
              <OPTION value=4>4</OPTION>
            </SELECT></TD>
        </TR>
        <TR>
          <TD class="Item" id="t_authtype">Auth type:</TD>
          <TD><SELECT name="authtype" id="authtype" style = "width:180px">
              <OPTION value=1 id="t_open">open</OPTION>
              <OPTION value=2 id="t_shared">shared</OPTION>
            </SELECT></TD>
        </TR>
        <TR>
          <TD class=Item style="padding-left:40px" id="t_keytext">Password:</TD>
          <TD colspan = "3"><INPUT name="keytext" type=text class=text id="keytext"></TD>
        </TR>

		<TR>
          <TD colspan=2>&nbsp;</TD>
        </TR>
		
        <TR>
          <TD class="blue" colspan=2></TD>
        </TR>

        <TR>
          <TD class="h2" colspan=3 id="t_title">AP Setting</TD>
        </TR>
	
		
		<TR>
          <TD class="Item" id="t_ssid">Local SSID:</TD>
          <TD><INPUT class="text" id="ssid" name="ssid1" maxlength=32 size=32></TD>
        </TR>

        <TR>
          <TD></TD>
          <TD><INPUT type="checkbox" value=1 name="ap">
            &nbsp;<A id="t_enwi">Enable Wireless Router Radio</A></TD>
        </TR>		
		
        <TR>
          <TD></TD>
          <TD><INPUT type="checkbox" value=2 name="broadcast">
            &nbsp;<A id="t_enssid">Enable SSID Broadcast</A></TD>
        </TR>		
        <!-- changed by lixiangui, wireless swtich no more used in products for export -->
        <TR style="display:none">
          <TD></TD>
          <TD ><INPUT type="checkbox" value=2 name="diswlan" onClick="doDisWlan()">
            &nbsp;<A id="t_endiswlan">Disable Local Wireless Access</A></TD>
        </TR>
        <TR id="display_wds">
          <TD></TD>
          <TD ><INPUT type="checkbox" value=2 name="wdsbrl" id="wdsbrl" onClick="doBrl()">
            &nbsp;<A id="t_enWdsbrl">Enable WDS</A></TD>		  
        </TR>
        <SCRIPT type="text/javascript">
if(wlanPara[13] == 1)
{
//added by ZQQ,08.12.05, add the reboot information
    document.write('<TR><TD colspan=2><span style="color:#FF0000" id="t_chng">The change of wireless config will not take effect until the Router reboots, please <\/span><A href="../userRpm/SysRebootRpm.htm?session_id=' + session_id +'" id="t_click">click here<\/A><span id="t_to_reboot" style="color:#FF0000"> to reboot.<\/span> <\/TD><\/TR>');
	
}
</SCRIPT>
        <TR>
          <TD class="blue" colspan=2></TD>
        </TR>
      <TR>
        <TD></TD>
        <TD>
		<SCRIPT type="text/javascript">
			document.write('<input name="session_id" id="session_id" type="hidden" value="'+session_id +'">');
		</SCRIPT>
		<INPUT class="buttonBig" id="Save" type="submit" value="Save" name="Save"></TD>
      </TR>
      </TBODY>
      
    </TABLE>
  </FORM>
</CENTER>
</BODY>
</HTML>
<SCRIPT type="text/javascript">
document.getElementById("display_wds").style.display="none";
document.forms[0].ssid1.value = wlanPara[3];
document.forms[0].ap.checked = wlanPara[8];
document.forms[0].broadcast.checked = wlanPara[9];

document.forms[0].wdsbrl.checked = wlanPara[22];
document.forms[0].diswlan.checked = wlanPara[47];
doDisWlan();
doWkMode();
doBrl();

document.forms[0].brlssid.value  = wlanPara[23];
document.forms[0].brlbssid.value  = wlanPara[24];
document.forms[0].keytype.value = wlanPara[25];
document.forms[0].keytext.value = wlanPara[26];
document.forms[0].wepindex.value = wlanPara[27];   
document.forms[0].authtype.value = wlanPara[32]; 
</SCRIPT>
