
<SCRIPT type="text/javascript">
<!--//

function doGetTime()
{
    location.href="GetGMTRpm.htm?GetTime=GetTime&session_id=" + session_id;
}

function isRYear(year)
{
	if ( (year%400) == 0)
	{
		return true;
	}
	else if ( (year%100) == 0)
	{
		return false;
	}
	else if ( (year%4) == 0)
	{
		return true;
	}
	else
	{
		return false;
	}
}
function isValidDate(year, month, day)
{
	month = month+1;
	if ( (month == 1) || (month == 3) || (month == 5)
		|| (month == 7) || (month == 8)
		|| (month == 10) || (month == 12) )
	{
		if ((day < 32) && (day>0) )
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	else if (month == 2)
	{
		if (isRYear(year))
		{
			if ((day < 30) && (day>0) )
			{
				return true;
			}
		}
		else
		{
			if ((day < 29) && (day>0) )
			{
				return true;
			}
		}
		return false;
	}
	else
	{
		if ((day < 31) && (day>0) )
		{
			return true;
		}
		else
		{
			return false;
		}
	}
}

// [zhangganggang start]
function getDay(year, month, count, week)
{
	var monthDays = new Array(12);
	monthDays[0] = 31;
	isRYear(year) ? (monthDays[1] = 29) : (monthDays[1] = 28);
	monthDays[2] = 31;
	monthDays[3] = 30;
	monthDays[4] = 31;
	monthDays[5] = 30;
	monthDays[6] = 31;
	monthDays[7] = 31;
	monthDays[8] = 30;
	monthDays[9] = 31;
	monthDays[10] = 30;
	monthDays[11] = 31;

	//start month 1st day is week @fWeek
	var dObj = new Date(year, month, 1);
	var fWeek = parseInt(dObj.getDay());

	var day = count*7 - fWeek + week + 1 + (week<fWeek?7:0);
	var LAST = 4; // if user select the 'LAST' week count, this is the special situation

	if (day > monthDays[month])
	{
		if (LAST != count)
		{

			alert(js_bad_start_date="Daylight date set is invalid!" + day);
			return 0;
		}
		while (day > monthDays[month]) day -= 7;
		return day;
	}
	return day;
}

function checkforAction()
{
var set_daylightSaving;
	for(var i = 1; i < 7; i ++)
	{
		if(document.forms[0].elements[i].value == "")
		{
			alert(js_input_time="Please input a time!");
			var element = document.forms[0].elements[i];
			if(element)
			{
				element.focus();
				element.select();
			}
			return false;
		}
	}
	if(!is_number(document.forms[0].year.value,1970,2037))
	{
		alert(js_bad_year="Wrong format of year, please input another one(1970-2037)!");
		var element =document.forms[0].year;
		if(element)
		{
			element.focus();
			element.select();
		}
		return false;
	}
	if(!is_number(document.forms[0].month.value,1,12))
	{
		alert(js_bad_month="Wrong format of month, please input another one(1-12)!");
		var element =document.forms[0].month;
		if(element)
		{
			element.focus();
			element.select();
		}
		return false;
	}
	if(!is_number(document.forms[0].day.value,1,31))
	{
		alert(js_bad_day="Wrong format of day, please input another one(1-31)!");
		var element =document.forms[0].day;
		if(element)
		{
			element.focus();
			element.select();
		}
		return false;
	}
	if(!is_number(document.forms[0].hour.value,0,24))
	{
		alert(js_bad_hour="Wrong format of hour, please input another one(0-23)!");
		var element =document.forms[0].hour;
		if(element)
		{
			element.focus();
			element.select();
		}
		return false;
	}
	if(!is_number(document.forms[0].minute.value,0,60))
	{
		alert(js_bad_minute="Wrong format of minute, please input another one(0-59)!");
		var element =document.forms[0].minute;
		if(element)
		{
			element.focus();
			element.select();
		}
		return false;
	}
	if(!is_number(document.forms[0].second.value,0,60))
	{
		alert(js_bad_secd="Wrong format of second, please input another one(0-59)!");
		var element =document.forms[0].second;
		if(element)
		{
			element.focus();
			element.select();
		}
		return false;
	}

	if (document.forms[0].DaylightSaving.checked == false)
	{
		set_daylightSaving = 0;
	}
	else
	{
		set_daylightSaving = 1;
	}

	if((document.forms[0].year.value!=timeInf[2])||
		(document.forms[0].month.value!=timeInf[0])||
		(document.forms[0].day.value!=timeInf[1])||
		(document.forms[0].hour.value!=timeInf[3])||
		(document.forms[0].minute.value!=timeInf[4])||
		(document.forms[0].second.value!=timeInf[5]))
	{
		document.forms[0].isTimeChanged.value = "1";
	}

	if ((document.forms[0].start_month.value != timeInf[9])||
		(document.forms[0].start_count.value != timeInf[10])||
		(document.forms[0].start_week.value != timeInf[11])||
		(document.forms[0].start_hour.value != timeInf[12])||
		(document.forms[0].end_month.value != timeInf[13])||
		(document.forms[0].end_count.value != timeInf[14])||
		(document.forms[0].end_week.value != timeInf[15])||
		(document.forms[0].end_hour.value != timeInf[16])||
		(set_daylightSaving != timeInf[17]))
	{
		document.forms[0].isDaylightSavingChanged.value = "1";
	}

    if(document.forms[0].ntpA.value == "")
    {
		document.forms[0].ntpA.value = "0.0.0.0";
    }

    if(document.forms[0].ntpB.value == "")
    {
		document.forms[0].ntpB.value = "0.0.0.0";
	}
	if(is_domain(document.getElementById("ntpB").value)==false)
	{
		var element = document.getElementById("ntpB");
		if(element)
		{
			element.focus();
			element.select();
		}
		return false;
	}
	if(is_domain(document.getElementById("ntpA").value)==false)
	{
		var element = document.getElementById("ntpA");
		if(element)
		{
			element.focus();
			element.select();
		}
		return false;
	}

		var cYear = document.forms[0].year.value;
		var sMonth = parseInt(document.forms[0].start_month.value);
		var eMonth = parseInt(document.forms[0].end_month.value);

		var sWeekCount = parseInt(document.forms[0].start_count.value);
		var eWeekCount = parseInt(document.forms[0].end_count.value);

		var sWeek = parseInt(document.forms[0].start_week.value);
		var eWeek = parseInt(document.forms[0].end_week.value);

	var sDay = getDay(cYear, sMonth, sWeekCount, sWeek);
	var eDay = getDay(cYear, eMonth, eWeekCount, eWeek);

	if ( document.forms[0].DaylightSaving.checked == true)
	{
		if (!(isValidDate(cYear, sMonth, sDay)) )
		{
			alert(js_bad_start_date="Daylight date set is invalid, start day is invalid!");
			return false;
		}

		if (!(isValidDate(cYear, eMonth, eDay)) )
		{
			alert(js_bad_end_date="Daylight date set is invalid, end day is invalid!");
			return false;
		}
	}

	/* construct hash string of system time */
	var sysTimeHash = parseFormat(document.forms[0].month.value, 2) +
					  parseFormat(document.forms[0].day.value, 2) +
					  parseFormat(document.forms[0].hour.value, 2);
	/* construct hash string of start daylight time */
	var startTimeHash = parseFormat((parseInt(document.forms[0].start_month.value) + 1).toString(), 2) +
						parseFormat(sDay.toString(), 2) +
						parseFormat(document.forms[0].start_hour.value, 2);
	/* construct hash string of end daylight time */
	var endTimeHash = parseFormat((parseInt(document.forms[0].end_month.value) + 1).toString(), 2) +
					  parseFormat(eDay.toString(), 2) +
					  parseFormat((parseInt(document.forms[0].end_hour.value) + 1).toString(), 2);

	if (startTimeHash < endTimeHash)
	{
		if (sysTimeHash < endTimeHash)
		{
			document.getElementById("start_year").innerHTML = document.forms[0].year.value;
			document.getElementById("end_year").innerHTML = document.forms[0].year.value;
		}
		else
		{
			document.getElementById("start_year").innerHTML = (parseInt(document.forms[0].year.value) + 1).toString();
			document.getElementById("end_year").innerHTML = (parseInt(document.forms[0].year.value) + 1).toString();

			//There is a chance that start time bigger than end time after they both increase 1 to the next year, which is not right.
			// So when this occures, we descrease the start yeart back to current year.
			sDay = getDay(parseInt(document.forms[0].year.value) + 1, sMonth, sWeekCount, sWeek);
			eDay = getDay(parseInt(document.forms[0].year.value) + 1, eMonth, eWeekCount, eWeek);
			var newStartTimeHash = parseFormat((parseInt(document.forms[0].start_month.value) + 1).toString(), 2) +
						parseFormat(sDay.toString(), 2) +
						parseFormat(document.forms[0].start_hour.value, 2);
			var newEndTimeHash = parseFormat((parseInt(document.forms[0].end_month.value) + 1).toString(), 2) +
					  parseFormat(eDay.toString(), 2) +
					  parseFormat((parseInt(document.forms[0].end_hour.value) + 1).toString(), 2);
			if (newStartTimeHash > newEndTimeHash)
			{
				document.getElementById("start_year").innerHTML = parseInt(document.forms[0].year.value).toString();
			}
		}
	}
	else
	{
		if (sysTimeHash < endTimeHash)
		{
			document.getElementById("start_year").innerHTML = (parseInt(document.forms[0].year.value) - 1).toString();
			document.getElementById("end_year").innerHTML = document.forms[0].year.value;
		}
		else
		{
			document.getElementById("start_year").innerHTML = document.forms[0].year.value;
			document.getElementById("end_year").innerHTML = (parseInt(document.forms[0].year.value) + 1).toString();
		}
	}

	return true;
}
// [zhangganggang end]

function parseFormat(value, width)
{
	while (value.length < width) value = "0" + value;
	return value;
}

function doDaylightSaving()
{
	if (document.forms[0].DaylightSaving.checked == true)
	{
		document.forms[0].start_month.disabled = false;
		document.forms[0].start_count.disabled = false;
		document.forms[0].start_week.disabled = false;
		document.forms[0].start_hour.disabled = false;
		document.forms[0].end_month.disabled = false;
		document.forms[0].end_count.disabled = false;
		document.forms[0].end_week.disabled = false;
		document.forms[0].end_hour.disabled = false;
		if (timeInf[18] == 0)
		{
			document.getElementById("daylightSaving_status").innerHTML = "<SPAN id=\"t_daylightSaving_flag\">daylight saving down.<\/SPAN>";
		}
		else
		{
			document.getElementById("daylightSaving_status").innerHTML = "<SPAN id=\"t_not_plug\">daylight saving up.<\/SPAN>";
		}
	}
	else
	{
		document.forms[0].start_month.disabled = true;
		document.forms[0].start_count.disabled = true;
		document.forms[0].start_week.disabled = true;
		document.forms[0].start_hour.disabled = true;
		document.forms[0].end_month.disabled = true;
		document.forms[0].end_count.disabled = true;
		document.forms[0].end_week.disabled = true;
		document.forms[0].end_hour.disabled = true;
		document.getElementById("daylightSaving_status").innerHTML = "";
	}
}

//-->
</SCRIPT>
</HEAD>
<SCRIPT type="text/javascript">
   document.write('<body onLoad="LoadHelp(\'DateTimeCfgHelpRpm.htm?PCtime='+timeInf[19]+'\');resize(this);" onResize="resize(this);">');
</SCRIPT>

<FORM action="DateTimeCfgRpm.htm" enctype="multipart/form-data" method="get">
  <TABLE id="autoWidth">
    <TR>
      <TD class=h1 colspan=4 id = "t_title">Time Settings</TD>
    </TR>
    <TR>
      <TD class=blue colspan=4></TD>
    </TR>
    <TR>
      <TD height="25" class=Item id = "t_tm_zone">Time zone:</TD>
      <TD colspan=2 ><SELECT id="timezone" name="timezone">
          <OPTION value="0"	id="t_timezone0">(GMT-12:00) Eniwetok,Kwajalein</OPTION>
          <OPTION value="60" 	id="t_timezone60" >(GMT-11:00) Midway Island,Samoa</OPTION>
          <OPTION value="120" 	id="t_timezone120">(GMT-10:00) Hawaii</OPTION>
          <OPTION value="180" 	id="t_timezone180">(GMT-09:00) Alaska</OPTION>
          <OPTION value="240" 	id="t_timezone240">(GMT-08:00) Pacific Time</OPTION>
          <OPTION value="300" 	id="t_timezone300">(GMT-07:00) Mountain Time (US Canada)</OPTION>
          <OPTION value="360"	id="t_timezone360">(GMT-06:00) Central Time (US Canada)</OPTION>
          <OPTION value="420" 	id="t_timezone420">(GMT-05:00) Eastern Time (US Canada)</OPTION>
		  <OPTION value="450" 	id="t_timezone450">(GMT-04:30) Caracas Time </OPTION>
          <OPTION value="480" 	id="t_timezone480">(GMT-04:00) Atlantic Time (Canada)</OPTION>

		  <OPTION value="510"	id="t_timezone510">(GMT-03:30) Newfoundland</OPTION>

          <OPTION value="540" 	id="t_timezone540">(GMT-03:00) Brasilia, Buenos Aires</OPTION>
          <OPTION value="600" 	id="t_timezone600">(GMT-02:00) Mid-Atlantic</OPTION>
          <OPTION value="660" 	id="t_timezone660">(GMT-01:00) Azores, Cape Verde Is</OPTION>
          <OPTION value="720" 	id="t_timezone720">(GMT) Greenwich Mean Time, Dublin, London</OPTION>
          <OPTION value="780" 	id="t_timezone780" >(GMT+01:00) Berlin, Stockholm, Rome, Bern, Brussels</OPTION>
          <OPTION value="840" 	id="t_timezone840">(GMT+02:00) Athens, Helsinki, Eastern Europe, Israel</OPTION>
          <OPTION value="900" 	id="t_timezone900">(GMT+03:00) Baghdad, Kuwait, Nairobi, Riyadh, Moscow</OPTION>

		  <OPTION value="930" 	id="t_timezone930">(GMT+03:30) Teheran</OPTION>

          <OPTION value="960" 	id="t_timezone960">(GMT+04:00) Abu Dhabi, Muscat, Kazan, Volgograd</OPTION>

		  <OPTION value="990" 	id="t_timezone990">(GMT+04:30) Kabul</OPTION>

          <OPTION value="1020" 	id="t_timezone1020">(GMT+05:00) Islamabad, Karachi, Ekaterinburg</OPTION>

		  <OPTION value="1050" 	id="t_timezone1050">(GMT+05:30) Madras, Calcutta, Bombay, New Delhi</OPTION>
		  <OPTION value="1065" 	id="t_timezone1065">(GMT+05:45) Katmandu</OPTION>

          <OPTION value="1080" 	id="t_timezone1080">(GMT+06:00) Alma-Ata, Dhaka</OPTION>
		  <OPTION value="1110" 	id="t_timezone1110">(GMT+06:30) Rangoon</OPTION>

          <OPTION value="1140" 	id="t_timezone1140">(GMT+07:00) Bangkok, Jakarta, Hanoi</OPTION>
          <OPTION value="1200" 	id="t_timezone1200">(GMT+08:00) Beijing, Hong Kong, Perth, Singapore</OPTION>
          <OPTION value="1260" 	id="t_timezone1260">(GMT+09:00) Tokyo, Osaka, Sapporo, Seoul, Yakutsk</OPTION>

		  <OPTION value="1290" 	id="t_timezone1290">(GMT+09:30) Adelaide</OPTION>

          <OPTION value="1320" 	id="t_timezone1320">(GMT+10:00) Brisbane, Canberra, Melbourne, Sydney</OPTION>
          <OPTION value="1380" 	id="t_timezone1380">(GMT+11:00) Magadan, Solomon Is., New Caledonia</OPTION>
          <OPTION value="1440" 	id="t_timezone1440">(GMT+12:00) Fiji, Kamchatka, Auckland</OPTION>
          <OPTION value="1500" 	id="t_timezone1500">(GMT+13:00) Nuku'alofa</OPTION>
        </SELECT></TD>
    </TR>
    <TR>
      <TD width="31%" class=Item id = "t_date">Date:</TD>
      <TD ><INPUT name="month" type="text" class="text" id="month" value="" size="2" maxlength="2" onChange="checkforAction();">
        &nbsp;&nbsp;&nbsp;
        <INPUT name="day" type="text" class="text" id="day" value="" size="2" maxlength="2" onChange="checkforAction();">
        &nbsp;&nbsp;&nbsp;
        <INPUT name="year" type="text" class="text" id="year" value="" size="4" maxlength="4" onChange="checkforAction();">
        &nbsp;<SPAN id="t_mmddyy">(MM/DD/YY)</SPAN></TD >
    </TR>
    <TR>
      <TD class=Item id = "t_time">Time:</TD>
      <TD ><INPUT name="hour" type="text" class="text" id="hour" value="" size="2" maxlength="2" onChange="checkforAction();">
        &nbsp;&nbsp;&nbsp;&nbsp;
        <INPUT name="minute" type="text" class="text" id="minute" value="" size="2" maxlength="2" onChange="checkforAction();">
        &nbsp;&nbsp;&nbsp;
        <INPUT name="second" type="text" class="text" id="second" value="" size="4" maxlength="2" onChange="checkforAction();">
        &nbsp;<SPAN id="t_hhmmss">(HH/MM/SS)</SPAN></TD >
    </TR>
    <TR>
      <TD class=Item id="t_ntp_srv_prior_i">NTP Server 1:</TD>
      <TD colspan=3><INPUT name="ntpA" type="text" class="text" id="ntpA" value="" size="31" maxlength="31">&nbsp;<SPAN id="t_opt1">(Optional)</SPAN></TD>
	</TR>
    <TR>
	  <TD class=Item id="t_ntp_srv_prior_ii">NTP Server 2:</TD>
      <TD><INPUT name="ntpB" type="text" class="text" id="ntpB" value="" size="31" maxlength="31">&nbsp;<SPAN id="t_opt2">(Optional)</SPAN>
      <input type="hidden" name="isTimeChanged" id="isTimeChanged" value="0"></TD>
    </TR>

    <TR>
      <TD></TD>
      <TD height="30" colspan=2><INPUT name="GetGmtTime" type="submit" class="buttonLL" value="Get GMT" onClick="return checkforAction();" >
      <INPUT name="SyncPC" id="SyncPC" type="submit" class="buttonLL" value="Sync with my PC" style="display:none;" onClick="sync_pc()">
      </TD>
    </TR>


	<TR><TD colspan="2"><span id="timezone_hint" style="display:none; text-align: center; color: red;"></span></TD></TR>
    <TR>
      <TD></TD>
		<TD><INPUT type="checkbox" value=1 name="DaylightSaving" onClick="doDaylightSaving()"><A id="t_enwi">Enable Daylight Saving</A></TD>
    </TR>

	<TR>
		<TD class=Item id="t_start" name="t_start">Start:</TD>
		<TD colspan=2 >
		<label id="start_year" name="start_year" ></label>&nbsp;
		<SELECT id="start_month" name="start_month" onChange="checkforAction();">
          <OPTION value="0"	id="t_start_month0">Jan</OPTION>
          <OPTION value="1"	id="t_start_month1">Feb</OPTION>
		  <OPTION value="2"	id="t_start_month2">Mar</OPTION>
		  <OPTION value="3"	id="t_start_month3">Apr</OPTION>
		  <OPTION value="4"	id="t_start_month4">May</OPTION>
		  <OPTION value="5"	id="t_start_month5">Jun</OPTION>
		  <OPTION value="6"	id="t_start_month6">Jul</OPTION>
		  <OPTION value="7"	id="t_start_month7">Aug</OPTION>
		  <OPTION value="8"	id="t_start_month8">Sep</OPTION>
		  <OPTION value="9"	id="t_start_month9">Oct</OPTION>
		  <OPTION value="10"	id="t_start_month10">Nov</OPTION>
		  <OPTION value="11"	id="t_start_month11">Dec</OPTION>
        </SELECT>
		<SELECT id="start_count" name="start_count" onChange="checkforAction();">
          <OPTION value="0"	id="t_start_count0">First</OPTION>
          <OPTION value="1"	id="t_start_count1">2nd</OPTION>
		  <OPTION value="2"	id="t_start_count2">3rd</OPTION>
		  <OPTION value="3"	id="t_start_count3">4th</OPTION>
		  <OPTION value="4"	id="t_start_count4">Last</OPTION>
        </SELECT>
		<SELECT id="start_week" name="start_week" onChange="checkforAction();">
          <OPTION value="1"	id="t_start_week0">Mon</OPTION>
          <OPTION value="2"	id="t_start_week1">Tue</OPTION>
		  <OPTION value="3"	id="t_start_week2">Wed</OPTION>
		  <OPTION value="4"	id="t_start_week3">Thu</OPTION>
		  <OPTION value="5"	id="t_start_week4">Fri</OPTION>
		  <OPTION value="6"	id="t_start_week5">Sat</OPTION>
		  <OPTION value="0"	id="t_start_week6">Sun</OPTION>
        </SELECT>
		<SELECT id="start_hour" name="start_hour" onChange="checkforAction();">
          <OPTION value="0"	id="t_start_hour0">0am</OPTION>
          <OPTION value="1"	id="t_start_hour1">1am</OPTION>
		  <OPTION value="2"	id="t_start_hour2">2am</OPTION>
		  <OPTION value="3"	id="t_start_hour3">3am</OPTION>
		  <OPTION value="4"	id="t_start_hour4">4am</OPTION>
		  <OPTION value="5"	id="t_start_hour5">5am</OPTION>
		  <OPTION value="6"	id="t_start_hour6">6am</OPTION>
		  <OPTION value="7"	id="t_start_hour7">7am</OPTION>
          <OPTION value="8"	id="t_start_hour8">8am</OPTION>
		  <OPTION value="9"	id="t_start_hour9">9am</OPTION>
		  <OPTION value="10"	id="t_start_hour10">10am</OPTION>
		  <OPTION value="11"	id="t_start_hour11">11am</OPTION>
		  <OPTION value="12"	id="t_start_hour12">12pm</OPTION>
          <OPTION value="13"	id="t_start_hour13">1pm</OPTION>
		  <OPTION value="14"	id="t_start_hour14">2pm</OPTION>
		  <OPTION value="15"	id="t_start_hour15">3pm</OPTION>
		  <OPTION value="16"	id="t_start_hour16">4pm</OPTION>
		  <OPTION value="17"	id="t_start_hour17">5pm</OPTION>
		  <OPTION value="18"	id="t_start_hour18">6pm</OPTION>
		  <OPTION value="19"	id="t_start_hour19">7pm</OPTION>
          <OPTION value="20"	id="t_start_hour20">8pm</OPTION>
		  <OPTION value="21"	id="t_start_hour21">9pm</OPTION>
		  <OPTION value="22"	id="t_start_hour22">10pm</OPTION>
		  <OPTION value="23"	id="t_start_hour23">11pm</OPTION>
        </SELECT>
        </TD>
    </TR>

	<TR>
		<TD class=Item id="t_end" name="t_end">End:</TD>
		<TD colspan=2 >
		<label id="end_year" name="end_year" ></label>&nbsp;
		<SELECT id="end_month" name="end_month" onChange="checkforAction();">
          <OPTION value="0"	id="t_end_month0">Jan</OPTION>
          <OPTION value="1"	id="t_end_month1">Feb</OPTION>
		  <OPTION value="2"	id="t_end_month2">Mar</OPTION>
		  <OPTION value="3"	id="t_end_month3">Apr</OPTION>
		  <OPTION value="4"	id="t_end_month4">May</OPTION>
		  <OPTION value="5"	id="t_end_month5">Jun</OPTION>
		  <OPTION value="6"	id="t_end_month6">Jul</OPTION>
		  <OPTION value="7"	id="t_end_month7">Aug</OPTION>
		  <OPTION value="8"	id="t_end_month8">Sep</OPTION>
		  <OPTION value="9"	id="t_end_month9">Oct</OPTION>
		  <OPTION value="10"	id="t_end_month10">Nov</OPTION>
		  <OPTION value="11"	id="t_end_month11">Dec</OPTION>
        </SELECT>
		<SELECT id="end_count" name="end_count" onChange="checkforAction();">
          <OPTION value="0"	id="t_end_count0">First</OPTION>
          <OPTION value="1"	id="t_end_count1">2nd</OPTION>
		  <OPTION value="2"	id="t_end_count2">3rd</OPTION>
		  <OPTION value="3"	id="t_end_count3">4th</OPTION>
		  <OPTION value="4"	id="t_end_count4">Last</OPTION>
        </SELECT>
		<SELECT id="end_week" name="end_week" onChange="checkforAction();">
          <OPTION value="1"	id="t_end_week0">Mon</OPTION>
          <OPTION value="2"	id="t_end_week1">Tue</OPTION>
		  <OPTION value="3"	id="t_end_week2">Wed</OPTION>
		  <OPTION value="4"	id="t_end_week3">Thu</OPTION>
		  <OPTION value="5"	id="t_end_week4">Fri</OPTION>
		  <OPTION value="6"	id="t_end_week5">Sat</OPTION>
		  <OPTION value="0"	id="t_end_week6">Sun</OPTION>
        </SELECT>
		<SELECT id="end_hour" name="end_hour" onChange="checkforAction();">
          <OPTION value="0"	id="t_end_hour0">0am</OPTION>
          <OPTION value="1"	id="t_end_hour1">1am</OPTION>
		  <OPTION value="2"	id="t_end_hour2">2am</OPTION>
		  <OPTION value="3"	id="t_end_hour3">3am</OPTION>
		  <OPTION value="4"	id="t_end_hour4">4am</OPTION>
		  <OPTION value="5"	id="t_end_hour5">5am</OPTION>
		  <OPTION value="6"	id="t_end_hour6">6am</OPTION>
		  <OPTION value="7"	id="t_end_hour7">7am</OPTION>
          <OPTION value="8"	id="t_end_hour8">8am</OPTION>
		  <OPTION value="9"	id="t_end_hour9">9am</OPTION>
		  <OPTION value="10"	id="t_end_hour10">10am</OPTION>
		  <OPTION value="11"	id="t_end_hour11">11am</OPTION>
		  <OPTION value="12"	id="t_end_hour12">12pm</OPTION>
          <OPTION value="13"	id="t_end_hour13">1pm</OPTION>
		  <OPTION value="14"	id="t_end_hour14">2pm</OPTION>
		  <OPTION value="15"	id="t_end_hour15">3pm</OPTION>
		  <OPTION value="16"	id="t_end_hour16">4pm</OPTION>
		  <OPTION value="17"	id="t_end_hour17">5pm</OPTION>
		  <OPTION value="18"	id="t_end_hour18">6pm</OPTION>
		  <OPTION value="19"	id="t_end_hour19">7pm</OPTION>
          <OPTION value="20"	id="t_end_hour20">8pm</OPTION>
		  <OPTION value="21"	id="t_end_hour21">9pm</OPTION>
		  <OPTION value="22"	id="t_end_hour22">10pm</OPTION>
		  <OPTION value="23"	id="t_end_hour23">11pm</OPTION>
        </SELECT>
        </TD>
    </TR>
	<TR>
		<TD class=Item id="t_daylightSaving">Daylight Saving Status:</TD>
		<TD id="daylightSaving_status"></TD>
		 <input type="hidden" name="isDaylightSavingChanged" id="isDaylightSavingChanged" value="0"></TD>
	</TR>
    <TR><TD colspan="2"></TD></TR>
	<TR>
	<TD></TD>
    <TD id="t_datetime_tips">Note: Click the "GET GMT" to update the time from the internet with the pre-defined servers<br></br>
    or entering the customized server(IP Address or Domain Name) in the above frames.
    </TD>
	</TR>

    <TR>
      <TD class=blue colspan=2></TD>
    </TR>
    <TR>
	<TD>
		<SCRIPT type="text/javascript">
				document.write('<input name="session_id" id="session_id" type="hidden" value="'+session_id +'">');
		</SCRIPT>
	</TD>
      <TD colspan=1><INPUT name="Save" type="submit" class="buttonBig" id="Submit" value="Save" onClick="return checkforAction();"></TD>
    </TR>
  </TABLE>
</FORM>
</BODY>
<HEAD>
<META http-equiv="pragma" content="no-cache">
</HEAD>
</HTML>

<SCRIPT type="text/javascript">

var timezone_selected_text = "";
var timezone_pc = "";
var timezone_pc_month;
var timezone_pc_day;
var timezone_pc_year;
var timezone_pc_hour;
var timezone_pc_minute;
var timezone_pc_second;

document.forms[0].timezone.value = timeInf[6];
document.forms[0].month.value = timeInf[0];
document.forms[0].day.value = timeInf[1];
document.forms[0].year.value = timeInf[2];
document.forms[0].hour.value = timeInf[3];
document.forms[0].minute.value = timeInf[4];
document.forms[0].second.value = timeInf[5];
if (timeInf[7] == "")
timeInf[7] = "0.0.0.0";
if (timeInf[8] == "")
timeInf[8] = "0.0.0.0";
document.forms[0].ntpA.value = timeInf[7];
document.forms[0].ntpB.value = timeInf[8];
document.forms[0].start_month.value = timeInf[9];
document.forms[0].start_count.value = timeInf[10];
document.forms[0].start_week.value = timeInf[11];
document.forms[0].start_hour.value = timeInf[12];
document.forms[0].end_month.value = timeInf[13];
document.forms[0].end_count.value = timeInf[14];
document.forms[0].end_week.value = timeInf[15];
document.forms[0].end_hour.value = timeInf[16];
if (timeInf[17] == 0)
{
	document.forms[0].DaylightSaving.checked = false;
	document.getElementById("start_year").innerHTML = "    ";
	document.forms[0].start_month.disabled = true;
	document.forms[0].start_count.disabled = true;
	document.forms[0].start_week.disabled = true;
	document.forms[0].start_hour.disabled = true;
	document.getElementById("end_year").innerHTML = "    ";
	document.forms[0].end_month.disabled = true;
	document.forms[0].end_count.disabled = true;
	document.forms[0].end_week.disabled = true;
	document.forms[0].end_hour.disabled = true;
}
else
{
	document.forms[0].DaylightSaving.checked = true;
}
checkforAction();
doDaylightSaving();

/* start: pengjiehua 2013-09-25 to sync time whit PC. */
if(timeInf[19] == 1)
{
	warning_timezone();
	document.getElementById("SyncPC").style.display = "inline";
}

// eg: if wholestr is "(GMT+06:30) Rangoon", then it returns "+0630"
function peel_timezone_value(wholestr){
	var StrIndex_mark;
	if(wholestr.toString().lastIndexOf("-") > 0){
		StrIndex_mark = wholestr.toString().lastIndexOf("-");
		}
	else if(wholestr.toString().lastIndexOf("+") > 0){
		StrIndex_mark = wholestr.toString().lastIndexOf("+");
		}
	if(StrIndex_mark > 0){
		wholestr = wholestr.toString().substring(StrIndex_mark, StrIndex_mark+6);
		if(wholestr.toString().lastIndexOf(":") > 0){
			wholestr = wholestr.split(":");
			wholestr = wholestr[0] + wholestr[1];
		}
	}
	return wholestr;
}

function get_timezone_selected(){
	var selected_index = document.getElementById("timezone").selectedIndex;
	var timezone_selected = document.getElementById("timezone").options[selected_index].text;
	timezone_selected_text = peel_timezone_value(timezone_selected);
}

function get_timezone_pc(){
	var now_tz = new Date();
	var StrIndex;
	timezone_pc_month = now_tz.getMonth()+1;
	timezone_pc_day = now_tz.getDate();
	timezone_pc_year = now_tz.getFullYear();
	timezone_pc_hour = now_tz.getHours();
	timezone_pc_minute = now_tz.getMinutes();
	timezone_pc_second = now_tz.getSeconds();

	if(now_tz.toString().lastIndexOf("-") > 0)
		StrIndex = now_tz.toString().lastIndexOf("-");
	else if(now_tz.toString().lastIndexOf("+") > 0)
		StrIndex = now_tz.toString().lastIndexOf("+");
	if(StrIndex > 0){
		timezone_pc = now_tz.toString().substring(StrIndex, StrIndex+5);
	}
}

function warning_timezone(){
	get_timezone_selected();
	get_timezone_pc();

	if((timezone_selected_text != "") &&
		(timezone_pc != "") &&
		(timezone_selected_text != timezone_pc)) {
		document.getElementById("timezone_hint").style.display = "block";
		document.getElementById("timezone_hint").innerHTML =
			"Notice: The time zone selected is different from your local setting, you can click the Sync with my PC button to apply the setting.";
	} else{
		document.getElementById("timezone_hint").style.display = "none";
	}
}

function sync_pc(){
	get_timezone_pc();
	var select_num = document.getElementById("timezone").length;
	var timezone_current;
	for (var index = 0; index < select_num; index++){
		timezone_current = document.getElementById("timezone").options[index].text;
		timezone_current = peel_timezone_value(timezone_current);
		if(timezone_current == timezone_pc) {
			document.forms[0].timezone.options[index].selected = true;
			break;
		}
	}

	document.forms[0].month.value = timezone_pc_month;
	document.forms[0].day.value = timezone_pc_day;
	document.forms[0].year.value = timezone_pc_year;
	document.forms[0].hour.value = timezone_pc_hour;
	document.forms[0].minute.value = timezone_pc_minute;
	document.forms[0].second.value = timezone_pc_second;
	document.forms[0].isTimeChanged.value = "1";
}
/* end: pengjiehua 2013-09-25 to sync time whit PC. */

</SCRIPT>
